
-- PHP STUDENTS REGISTRATION --
1. create students-reg file in htdocs/php_students_registration/
2. display "Hello world!"
3. display a form in html
4. handle POST submit 
3. create database "php_students_registration" - connect database 
4. write db connect logic - handle conn error - 
5. assign values to insert
6. write query to insert and execute
7. show success message

CONS OF PHP



-- LARAVEl STUDENTS REGISTRATION --

1. Select a workspace and open it in CMD terminal
2. Create laravel project
    composer create-project laravel/laravel student-reg

3. Review Project structure
4. Run project and Open http://127.0.0.1
    php artisan serve 

-- ROUTES --
5. Review /index route and "welcome" view
    PPT: Routes / Methods / Same URI / 
6. Create web route /hello and add display "Hello World"
7. review  Browser network request
-- LOADING VIEWS --
8. Create View "hello.blade.php" and Load view to route /hello 
    [ALSO FROM CONTROLLER EXAMPLE]
    php artisan make:controller HomeController

9. Create View  "student-form" and Load view to route /student-form
10. Create StudentController and Load view "student-form" from StudentController::viewForm
        php artisan make:controller StudentController


-- SUBMIT STUDENT FORM --
12. add addStudent in studentcontroller and add route /add-student
13. "student-form" view add action /add-student in form action  
     submitting form makes error "419 expired" 
     PPT: CSRF on POST route 
     add CSRF token  in view. send request again and review csrf token on request payload
     review payload other data
     dump payload data in controller
     
--  DATABASE Setup--
PPT: 
14. Create database "student-reg" in phpmyadmin and Update database details in .env
15. Create  "create_students_migration" 
        php artisan make:migration create_students_table

16. add columns in migration file
            $table->string('name');
            $table->string('email')->unique();
            $table->string('phone')->nullable();
            $table->text('address');
            $table->enum('gender',['Male','Female','Other']);
            $table->string('department');
            $table->boolean('parttime')->default(false);
            $table->date('joined_date');
    NOTE: email is unique

17. Run migration 
        php artisan migrate

18. Review "students" table and their columns in database
19. Make phone column nullable and refresh migrations
        $table->integer('phone')->nullable();
        php artisan migrate:fresh

-- Add Student Data in database --
18. Create students model
        php artisan make:model Student

19. handling in addStudent. 
        use Student:create and pass request data
        test adding to note "fillable" errror 
        solve it by adding fillable or guarded property in model
        return with redirect

20. add flash message with redirect an display it in form
21. check the students table data 

-- STUDENT LIST --

22. add logic viewForm in StudentController 
23. get the students data and pass it to view
24. loop the data in view with ul list 


-- ADDITIONAL --
1. review null insert of name field causes SQL error (php|laravel)
2. solution by adding validation
2. simulate the duplicate insert of email in php and SQL error (php|laravel)
3. simulate same in laravel and fix it with email unique validation

[OPTIONAL]. Create master layout and sections in student-form and student-list views